//test return 0

int bsearch(int[] arr, int target, int size) {
  int start = 0;
  int stop = size-1;
  int mid = -1;

  /* Invariant: target value is always between start and stop */
  while (start<=stop) {
    mid = (start + stop) / 2;
    if ( arr[mid] > target ) {
      stop = mid-1;
    } else if ( arr[mid] < target ) {
      start = mid+1;
    } else {
      return mid;
    }
  }

  return -(mid+1);
}

int myassert(bool res) {
  if ( !res ) 
    return 1/0;

  return 0;
}

int main() {
  int[] A;
  int loc;
  int i;

  A = alloc_array(int, 10);
  for (i=0; i<10; i++)
    A[i] = i;

  myassert(0 == bsearch(A, 0, 10));
  myassert(1 == bsearch(A, 1, 10));
  myassert(2 == bsearch(A, 2, 10));
  myassert(3 == bsearch(A, 3, 10));
  myassert(4 == bsearch(A, 4, 10));
  myassert(5 == bsearch(A, 5, 10));
  myassert(6 == bsearch(A, 6, 10));
  myassert(7 == bsearch(A, 7, 10));
  myassert(8 == bsearch(A, 8, 10));
  myassert(9 == bsearch(A, 9, 10));

  return 0;
}

