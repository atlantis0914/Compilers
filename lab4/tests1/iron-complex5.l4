//test return 1
// perceptron - A machine learning algorithm for binary classification

int classify(int[] x, int[] w, int nfeat) {
		int sum = 0;
		for(int i = 0; i < nfeat; i++) sum += x[i]*w[i];
		if(sum > 0) return 1;
		if(sum < 0) return -1;
		return 0;
}

int[] perceptron(int[][] xtest, int[] ytest, int ntest, int nfeat) {
		int[] w = alloc_array(int, nfeat);			
		for(int i = 0; i < nfeat; i++) w[i] = 0;
		for(int i = 0; i < ntest; i++) {
		    int y = classify(xtest[i], w, nfeat);
				if(y == 0 || y * ytest[i] < 0) {
				    for(int j = 0; j < nfeat; j++) w[j] = w[j]+ytest[i]*xtest[i][j];
				}
    }
		return w;
}

int main() {
		int n = 5;
		int f = 3;
		int[][] x = alloc_array(int[], n);
		for(int i = 0; i < n; i++) {
		  x[i] = alloc_array(int, f);
		}
		int[] y = alloc_array(int, n);
		x[0][0] = 2;
		x[0][1] = 2;
		x[0][2] = 0;
		y[0] = 1;
		x[1][0] = 0;
		x[1][1] = 0;
		x[1][2] = 2;
		y[1] = -1;
		x[2][0] = 1;
		x[2][1] = 0;
		x[2][2] = 1;
		y[2] = -1;
		x[3][0] = 1;
		x[3][1] = 3;
		x[3][2] = 1;
		y[3] = 1;
		x[4][0] = 1;
		x[4][1] = 1;
		x[4][2] = 4;
		y[4] = -1;

		int[] w = perceptron(x, y, n, f);
		int[] test = alloc_array(int, f);
		test[0] = 3;
		test[1] = 2;
		test[2] = 1;
		return classify(test, w, f);		
}